{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/MemeGenerator/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [Meme, setMeme] = React.useState({\n    TopText: \"One does not simply\",\n    BottomText: \"Eat a grilled cheese\",\n    Img: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [MemeArray, setMemeArray] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setMemeArray(data.data.memes));\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      Img: MemeArray[Math.floor(Math.random() * MemeArray.length)]\n    }));\n  }, []);\n  function updateTopText(event) {\n    const {\n      value,\n      name\n    } = event.currentTarget;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Top Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"One does not simply\",\n          name: \"TopText\",\n          onChange: updateTopText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Bottom Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Eat a grilled cheese\",\n          name: \"BottomText\",\n          onChange: updateTopText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ChangeImage,\n        children: \"Generate a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ActualMeme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Meme.Img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"TopText\",\n        children: Meme.TopText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"BottomText\",\n        children: Meme.BottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"3D5zbBbrsdnh6OOHKcncUfzAFzQ=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Main","_s","Meme","setMeme","useState","TopText","BottomText","Img","MemeArray","setMemeArray","useEffect","fetch","then","res","json","data","memes","prevMeme","Math","floor","random","length","updateTopText","event","value","name","currentTarget","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ChangeImage","src","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/MemeGenerator/src/Main.jsx"],"sourcesContent":["import React from 'react';\n\nexport default function Main() {\n\n    const [Meme, setMeme] = React.useState({\n        TopText: \"One does not simply\",\n        BottomText: \"Eat a grilled cheese\",\n        Img: \"http://i.imgflip.com/1bij.jpg\"\n    })\n\n    const [MemeArray, setMemeArray] = React.useState([])\n\n    React.useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setMemeArray(data.data.memes))\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            Img: MemeArray[Math.floor(Math.random()* MemeArray.length)]\n        }))\n    }, [])\n\n    \n\n    function updateTopText(event){\n        const {value, name} = event.currentTarget\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n\n    return (\n        <main>\n            <div className=\"form\">\n                <label>Top Text:\n                    <input\n                        type=\"text\"\n                        placeholder=\"One does not simply\"\n                        name=\"TopText\"\n                        onChange={updateTopText}\n                    />\n                </label>\n\n                <label>Bottom Text:\n                    <input\n                        type=\"text\"\n                        placeholder=\"Eat a grilled cheese\"\n                        name=\"BottomText\"\n                        onChange={updateTopText}\n                    />\n                </label>\n                <button onClick={ChangeImage}>Generate a new meme image</button>\n            </div>\n            <div className=\"ActualMeme\">\n                <img src={Meme.Img} />\n                <span className=\"TopText\">{Meme.TopText}</span>\n                <span className=\"BottomText\">{Meme.BottomText}</span>\n            </div>\n        </main>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}