{"ast":null,"code":"var _jsxFileName = \"/Users/Aashiq/Desktop/Projects/Tenzies/src/Main.jsx\",\n  _s = $RefreshSig$();\nimport Die from './Die.jsx';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [DiceNumbers, setDiceNumbers] = React.useState([]);\n  function WonChecker() {\n    var _DiceNumbers$;\n    let AllDiceHeldStatus = true;\n    let AllDiceSameValue = true;\n    let preValue = (_DiceNumbers$ = DiceNumbers[0]) === null || _DiceNumbers$ === void 0 ? void 0 : _DiceNumbers$.number;\n    for (let i = 0; i < DiceNumbers.length; i++) {\n      AllDiceHeldStatus = DiceNumbers[i].isHeld && AllDiceHeldStatus;\n      AllDiceSameValue = preValue == DiceNumbers[i].number;\n      preValue = DiceNumbers[i].number;\n    }\n    if (AllDiceHeldStatus && AllDiceSameValue) {\n      console.log(\"won!!!\");\n    }\n  }\n  function FirstGenerateNewDice() {\n    const DiceArray = [];\n    for (let i = 0; i < 10; i++) {\n      DiceArray.push({\n        id: i,\n        number: Math.floor(Math.random() * 6) + 1,\n        isHeld: false\n      });\n    }\n    return DiceArray;\n  }\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    WonChecker();\n  }, [DiceNumbers]);\n  React.useEffect(() => {\n    WonChecker();\n  }, [DiceNumbers]);\n  function hold(id) {\n    for (let i = 0; i < DiceNumbers.length; i++) {\n      if (id == DiceNumbers[i].id) {\n        setDiceNumbers(prevDiceNumbers => {\n          return prevDiceNumbers.map(prevDiceNumber => prevDiceNumber.id == id ? {\n            ...prevDiceNumber,\n            isHeld: !prevDiceNumber.isHeld\n          } : prevDiceNumber);\n        });\n      }\n    }\n  }\n  function Reroll() {\n    setDiceNumbers(DiceNumbers.map(prevDiceNumbers => {\n      if (prevDiceNumbers.isHeld) {\n        return {\n          id: prevDiceNumbers.id,\n          number: prevDiceNumbers.number,\n          isHeld: prevDiceNumbers.isHeld\n        };\n      } else {\n        let rndNumber = Math.floor(Math.random() * 6) + 1;\n        return {\n          id: prevDiceNumbers.id,\n          number: rndNumber,\n          isHeld: prevDiceNumbers.isHeld\n        };\n      }\n    }));\n  }\n  const Dice = DiceNumbers.map(diceObject => /*#__PURE__*/_jsxDEV(Die, {\n    id: diceObject.id,\n    Number: diceObject.number,\n    isHeld: diceObject.isHeld,\n    hold: hold\n  }, diceObject.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 48\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiceCollection\",\n      children: Dice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"RerollButton\",\n      onClick: Reroll,\n      children: \"Reroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"TgeJN8OzPAPDQXjwuvPQl3F1Des=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Die","React","jsxDEV","_jsxDEV","Main","_s","DiceNumbers","setDiceNumbers","useState","WonChecker","_DiceNumbers$","AllDiceHeldStatus","AllDiceSameValue","preValue","number","i","length","isHeld","console","log","FirstGenerateNewDice","DiceArray","push","id","Math","floor","random","useEffect","isFirstRender","current","hold","prevDiceNumbers","map","prevDiceNumber","Reroll","rndNumber","Dice","diceObject","Number","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/Aashiq/Desktop/Projects/Tenzies/src/Main.jsx"],"sourcesContent":["import Die from './Die.jsx'\nimport React from 'react'\n\nexport default function Main(){\n\n    const [DiceNumbers, setDiceNumbers] = React.useState([])\n\n    function WonChecker(){\n        let AllDiceHeldStatus = true\n        let AllDiceSameValue = true \n        let preValue = DiceNumbers[0]?.number\n        for(let i = 0; i<DiceNumbers.length; i++){\n            AllDiceHeldStatus = (DiceNumbers[i].isHeld && AllDiceHeldStatus)\n            AllDiceSameValue = (preValue == DiceNumbers[i].number)\n            preValue = DiceNumbers[i].number\n        }\n        if(AllDiceHeldStatus && AllDiceSameValue){\n            console.log(\"won!!!\")\n        }\n    }\n    \n\n    function FirstGenerateNewDice(){\n        const DiceArray = []\n        for(let i = 0; i<10; i++){\n            DiceArray.push({id: i, number: (Math.floor(Math.random() * 6) + 1), isHeld: false})\n        }\n        return DiceArray\n    }\n\n\n    React.useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false; \n            return;\n        }\n        WonChecker(); \n    }, [DiceNumbers]); \n\n    React.useEffect(() => {\n        WonChecker();\n    }, [DiceNumbers]);\n\n\n\n    function hold(id){\n        for(let i=0; i<DiceNumbers.length; i++){\n            if(id == DiceNumbers[i].id){\n                setDiceNumbers(\n                    prevDiceNumbers => {\n                        return prevDiceNumbers.map(\n                            prevDiceNumber =>\n                                    (prevDiceNumber.id == id) ? {...prevDiceNumber, isHeld: !prevDiceNumber.isHeld} : prevDiceNumber\n                        )\n                    }\n                )\n            }\n        }\n    }\n\n    function Reroll(){\n        setDiceNumbers(DiceNumbers.map(prevDiceNumbers => {\n            if(prevDiceNumbers.isHeld){\n                return {id: prevDiceNumbers.id, number: prevDiceNumbers.number, isHeld: prevDiceNumbers.isHeld};\n            }\n            else{\n                let rndNumber = (Math.floor(Math.random() * 6) + 1);\n                return {id: prevDiceNumbers.id, number: rndNumber, isHeld: prevDiceNumbers.isHeld};\n            }\n        }));\n    }\n\n    const Dice = DiceNumbers.map(diceObject => <Die key={diceObject.id} id={diceObject.id} Number={diceObject.number} isHeld={diceObject.isHeld} hold={hold}/>)\n    return (\n        <main>\n            <div className='DiceCollection'>\n                {Dice}\n            </div>\n            <button className='RerollButton' onClick={Reroll}>Reroll</button>\n        </main>   \n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}